(C)RAT TASK
=====================================================================
      The Remote Associate Task (RAT) is a task that was first Mednick (1962) as a meaning of measuring creative thought without requiring knowledge specific to any field. In this task the participants are presented to triads of words and they must come up with a solution word that is related to the three words presented in each trail. 
      There is a growing consensus in the literature that the creative thought may consist of divergent thinking and convergent thinking, whereas convergent thinking involves single solution to a specific task, and divergent thinking encompasses the generation of multiple solutions to a given task. Given that the RAT task requires a single and only solution to solve its problems, there also a growing consensus that the RAT task taps into convergent thinking processes – for a more complete discussion see Lee, Huggins, and Therriault (2014).
      The version of the task presented here is the Compound Remote Associate Problems. The compound version of the RAT task was created by Bowden and Jung-Beeman (2003) for use in research on the experience of insight in problem solving. The authors also wanted to improve the original task by providing a more consistent task. In other words, they wanted that the solution word to always be related to the triad words in the same way. To this end, they created their own set of problems, so that the solution word was associated with all three words of the triad through formation of a compound word or a phrase, always. Bowden and Jung-Beeman (2003) created 144 compound remote associate problems. In the current version of task, we use a subset of these 144 problems. Our sample consists of 30 problems, the same sample of Lee et al. (2014). We made this choice because Lee et al. (2014) presented satisfactory psychometric properties regarding both the internal and external structure of this subset of compounds problems of the RAT task. However, it should be noted that the problems presented here are not hardcoded in the application and can be easily replaced trough a “.txt” file in the folder as the software. Instructions on how to do that are presented below.
______________________________________________________________________
REFERENCES
Bowden, E. M., & Jung-Beeman, M. (2003). Normative data for 144 compound remote associate problems. Behavior Research Methods, Instruments, & Computers, 35(4), 634–639. https://doi.org/10.3758/BF03195543

Lee, C. S., Huggins, A. C., & Therriault, D. J. (2014). A measure of creativity or intelligence? Examining internal and external structure validity evidence of the Remote Associates Test. Psychology of Aesthetics, Creativity, and the Arts, 8(4), 446–460. https://doi.org/10.1037/a0036773

Mednick, S. A. (1962). The associative basis of the creative process. Psychological Review, 69, 220–232. doi:10.1037/h0048850
=====================================================================
HOW TO MODIFY THE TRIADS OF WORDS
== WARNING: DO NOT MODIFY THE NAME OF THE FILES IN THE FOLDER. THAT CAN BREAK THE SOFTWARE. ALSO, BEFORE MODIFYING THE “.txt” FILES, COPY THE ORIGINAL FILES AND CREATE A BACKUP. ==
	The problems that the software is going to present to the participants are included in the “triads.txt” file in the software folder. When you open the file the first line of the file is the number of problems that are going to be presented. You can modify this number any number of problems, but remember to add additional problems at the end of the document if you are going to increase the number. The following lines are the actual problems with the triads and their solution word. The structure is as follows: the first three lines are the triads of words and then the forth line is the solution word. This patter repeats for the following lines (the 5th, 6th, and 7th lines are the triad, and the 8th line is the solution, and so on…). Every time that you change the words or the total number of trials remember to not change that order, and to exclude all blank spaces before or after the words or number. It is very important to keep the same structure, otherwise the program won’t work!
=====================================================================
HOW TO MODIFY THE INTRUCTIONS FILES
== WARNING: DO NOT MODIFY THE NAME OF THE FILES IN THE FOLDER. THAT CAN BREAK THE SOFTWARE. ALSO, BEFORE MODIFYING THE “.txt” FILES, COPY THE ORIGINAL FILES AND CREATE A BACKUP. ==
	The instructions presented to the participants at the beginning of the training are included in the "instructions.txt" file. The first line of the document is the number of screens that you want to divide your instructions. The following numbers are the number of lines in each instruction screen. I do not recommend changing this number above five. You can modify these numbers as well as the instructions. However, pay attention so that the number of lines matches the number of lines in the actual instructions. If you delete a line and forget to update the number in the top lines the program will behave unpredicatibly. Additionally, every time that you change words or numbers remember to exclude all blank spaces before or after the words or number. And finally, after you modify and save the file, run the software and open the instructions, so you can check if the instructions are being displayed as intended. If you write too many lines per screen, it may be displayed incorrectly.
=====================================================================
This software was created by MSc. Gabriel Arantes Tiraboschi (PhD student at the time) under the supervision of the professors Dr. Veronique Bohbot and Dr. Greg West, of McGill university and Université de Montréal, respectively. 
